[tox]
envlist =
    pkgvalidate
    mdlint
    mdspell
    ymllint
    shellcheck
    dockerfilelint
    dockerbuildtest
    civalidate

[testenv]
basepython = python3.7
skip_install = true
deps = {pkgvalidate,mdlint,mdspell,ymllint}: -r{toxinidir}/requirements.txt

[testenv:pkgvalidate]
description = Validate the pacakge.json inside python venv based on npm specifications
commands =
    nodeenv --python-virtualenv
    npm install
    npm run validate-pkg

[testenv:mdlint]
description = Run remark with remark-lint plugins inside python venv against md files
commands =
    nodeenv --python-virtualenv
    npm install
    npm run lint-md

[testenv:mdspell]
description = Run markdown-spellcheck inside python venv against md files
commands =
    nodeenv --python-virtualenv
    npm install
    npm run spell-md-report

[testenv:ymllint]
description = Use yamllint againt yml files
commands = yamllint --config-file .yamllint --format colored --strict .

[testenv:shellcheck]
description = Run shellcheck (if exists) for linting shell scripts
commands = /bin/bash {toxinidir}/shellscripts/run-once-docker-operations.sh check-shellscripts


[testenv:dockerfilelint]
description = Run local only dockerfilelint linter
commands = /bin/bash {toxinidir}/shellscripts/run-once-docker-operations.sh lint-dockerfile
    
[testenv:dockerbuildtest]
description = Run local only dockerfilelint linter
whitelist_externals = make
commands = make docker-full-structure-testing

[testenv:civalidate]
description = Validate the .circleci/config.yml configuration file with CircleCi cli
commands = /bin/bash {toxinidir}/shellscripts/run-once-docker-operations.sh circleci-validate
